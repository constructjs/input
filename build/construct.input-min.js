!function(){function t(){var t=construct.options.input||[],e={};t.indexOf("keys")>-1,t.indexOf("mouse")>-1,t.indexOf("touch")>-1&&o()&&(e.click="_ontouch"),t.indexOf("gamepad")>-1;var c=APP.Views.Main3D||APP.View;APP.Views.Main3D=c.extend({options:{monitor:construct.options.input},events:e,initialize:function(t){return this.on("intersect",_.bind(this.clickObject,this)),c.prototype.initialize.call(this,t)},_start:function(t){return t.projector=new THREE.Projector,c.prototype._start.call(this,t)},mousedown:function(){this.checkIntersect()},_ontouch:function(t){var e=t.originalEvent.changedTouches[0],n=e.clientX,o=e.clientY;this.params.set({mouse:{x:n,y:o}}),this.checkIntersect(),this.ontouch&&this.ontouch(t)},clickObject:function(t){console.log("clickObject:",t)},checkIntersect:function(){var t=$(this.el),e=t.offset(),o=this.params.get("mouse"),c=(o.x-e.left)/jQuery(window).width()*2-1,i=2*-((o.y-e.top)/jQuery(window).height())+1,s=.5,a=new THREE.Vector3(c,i,s),u=this.$3d.active.camera,r=n(this.$3d.objects);this.$3d.projector.unprojectVector(a,u);var h=new THREE.Raycaster(u.position,a.sub(u.position).normalize()),b=h.intersectObjects(r);if(b.length>0){var p=b[0].object.parent;this.trigger("intersect",p)}}})}function e(){APP.Meshes.Player=APP.Meshes.Player.extend({onConnectGamepad:function(){},onDisconnectGamepad:function(){},updateGamepads:function(){var t=this.params.get("gamepads");if(t&&t[0]){var e=t[0].axes;this.state.move.left=e[0]<-.4?1:0,this.state.move.right=e[0]>.4?1:0,this.state.move.forward=e[1]<-.4?1:0,this.state.move.back=e[1]>.4?1:0,this.state.move.yawLeft=e[2]<-.4?1:0,this.state.move.yawRight=e[2]>.4?1:0,this.state.move.pitchUp=e[3]<-.4?1:0,this.state.move.pitchDown=e[3]>.4?1:0}this.updateMovementVector(),this.updateRotationVector()}})}function n(t,e){t=t||{},e=e||[];for(var o in t){var c=t[o];c instanceof THREE.Mesh?e.push(c):c.children&&(e=e.concat(n(c.children)))}return e}function o(){return"ontouchstart"in document&&!("callPhantom"in window)}"undefined"!=typeof construct&&(construct.input=function(t){return t=t||[],t.indexOf("keys")>-1&&(construct.config.shim["backbone.app"].deps.push("backbone.ui.keys"),construct.config.deps.push("backbone.ui.keys")),t.indexOf("mouse")>-1&&construct.config.deps.push("backbone.ui.mouse"),t.indexOf("touch")>-1&&(construct.config.shim["backbone.app"].deps.push("backbone.ui.touch"),construct.config.deps.push("backbone.ui.touch")),t.indexOf("gamepad")>-1&&(construct.config.shim["backbone.app"].deps.push("backbone.ui.gamepad"),construct.config.deps.push("backbone.ui.gamepad")),Object.extend(construct.options,{input:t}),function(){}},construct.config=Object.extend(construct.config,{paths:{"backbone.ui.keys":["//rawgithub.com/backbone-input/keys/master/build/backbone.input.keys"],"backbone.ui.touch":["//rawgithub.com/backbone-input/touch/master/build/backbone.input.touch"],"backbone.ui.mouse":["//rawgithub.com/backbone-input/mouse/master/build/backbone.input.mouse"],"backbone.ui.gamepad":["//rawgithub.com/backbone-input/gamepad/master/build/backbone.input.gamepad"]},shim:{"backbone.ui.keys":{deps:["backbone","underscore","jquery"]},"backbone.ui.touch":{deps:["backbone","underscore","jquery"]},"backbone.ui.mouse":{deps:["backbone","underscore","jquery"]}}}),construct.promise.add(function(){t(),e()}))}();